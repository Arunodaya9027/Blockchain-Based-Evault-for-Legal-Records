{"ast":null,"code":"import _regeneratorRuntime from \"C:/__F__/Projects/SIH2k23/SHAURYA/shaurya/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/__F__/Projects/SIH2k23/SHAURYA/shaurya/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/__F__/Projects/SIH2k23/SHAURYA/shaurya/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\__F__\\\\Projects\\\\SIH2k23\\\\SHAURYA\\\\shaurya\\\\src\\\\variables\\\\FileUpload.js\",\n  _this = this,\n  _s = $RefreshSig$();\n// import {useState} from \"react\";\n// // import '../assets/css/FileUpload.css';\n// // import MetaMaskButton from \"./MetaMaskButton\";\n// // reactstrap components\n// import {\n//     Container,\n//     Row,\n//     UncontrolledTooltip,\n//   } from \"reactstrap\";\n// import { Accordion, Card, Button } from 'react-bootstrap';\n\n// const FileUpload=()=>{\n// const [file,setFile]=useState(null);\n// const [cid,setCid]=useState(\"\");\n// const [transaction,setTransaction]=useState(\"\");\n//     const handleSubmit =async(event)=>{\n//         event.preventDefault();\n//          try{\n//              if(file){\n//                  const formData = new FormData();\n//                  formData.append(\"file\",file);\n//                  const response = await fetch('http://localhost:5000/upload',{\n//                      method:'POST',\n//                      body:formData\n//                  }).then(response=>response.json())\n//                  .then(data=>{ \n//                     setCid(data.cid);\n//                     setTransaction(data.transactionHash)\n//                    console.log(data.cid)\n//                    console.log(data.transactionHash)\n//                  })\n//                  .catch(error=>{\n//                      console.error(error);\n//                  })\n//              }\n//          }catch(error){\n//             alert(error);\n//          }\n//     }\n//     const retreieveFile=(event)=>{\n//         try{\n//             const data = event.target.files[0];\n//             setFile(data);\n//             event.preventDefault();\n//         }catch(error){\n//             alert(\"Retrieve File Does Not Worked\");\n//         }\n//     }\n\n// return<>\n\n//     <div className=\"img-ctr\">\n//         {cid && <a href={`https://${cid}.ipfs.dweb.link`}><img src={`https://${cid}.ipfs.dweb.link`} height={\"250px\"} /></a>}\n//         </div>\n//         <div className=\"transaction\">\n//         {transaction && <a href={`https://mumbai.polygonscan.com/tx/${transaction}`} target=\"_blank\">Transaction Detials</a>}\n//     </div>\n//     <div className=\"form\">\n\n//         <Container className=\"mt--7\" fluid>\n//             {/* Table */}\n//             <Row>\n//                 <div className=\"col\">\n//                     <Accordion id=\"accordionPanelsStayOpenExample\">\n//                         <Card>\n//                             <Card.Header>\n//                             <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n//                                 Accordion Item #1\n//                             </Accordion.Toggle>\n//                             </Card.Header>\n//                             <Accordion.Collapse eventKey=\"0\">\n//                             <Card.Body>\n//                                 <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n//                             </Card.Body>\n//                             </Accordion.Collapse>\n//                         </Card>\n//                         <Card>\n//                             <Card.Header>\n//                             <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n//                                 Accordion Item #2\n//                             </Accordion.Toggle>\n//                             </Card.Header>\n//                             <Accordion.Collapse eventKey=\"1\">\n//                             <Card.Body>\n//                                 <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n//                             </Card.Body>\n//                             </Accordion.Collapse>\n//                         </Card>\n//                         <Card>\n//                             <Card.Header>\n//                             <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n//                                 Accordion Item #3\n//                             </Accordion.Toggle>\n//                             </Card.Header>\n//                             <Accordion.Collapse eventKey=\"2\">\n//                             <Card.Body>\n//                                 <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n//                             </Card.Body>\n//                             </Accordion.Collapse>\n//                         </Card>\n//                     </Accordion>\n//                 </div>\n//             </Row>\n//         </Container>\n\n//         <form onSubmit={handleSubmit}>\n\n//             <input type=\"file\" className=\"choose\" onChange={retreieveFile}/>\n//             <button className=\"btn\" style={{backgroundColor:'#2ECC71',color:\"white\"}}>NFt Minter</button>\n\n//         </form>\n//         {/* <MetaMaskButton /> */}\n//     </div>\n// </>\n// }\n// export default FileUpload;\n\nimport React, { useState } from \"react\";\nimport { Accordion, Card, Button, Container, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar FileUpload = function FileUpload() {\n  _s();\n  var _ref;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cid = _useState4[0],\n    setCid = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    transaction = _useState6[0],\n    setTransaction = _useState6[1];\n  var handleSubmit = function handleSubmit(_x) {\n    return (_ref = _ref || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n      var formData, response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.prev = 1;\n            if (!file) {\n              _context.next = 15;\n              break;\n            }\n            formData = new FormData();\n            formData.append(\"file\", file);\n            _context.next = 7;\n            return fetch(\"http://localhost:5000/upload\", {\n              method: \"POST\",\n              body: formData\n            });\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return response.json();\n          case 10:\n            data = _context.sent;\n            setCid(data.cid);\n            setTransaction(data.transactionHash);\n            console.log(data.cid);\n            console.log(data.transactionHash);\n          case 15:\n            _context.next = 20;\n            break;\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](1);\n            alert(_context.t0);\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 17]]);\n    }))).apply(this, arguments);\n  };\n  var retrieveFile = function retrieveFile(event) {\n    try {\n      var data = event.target.files[0];\n      setFile(data);\n    } catch (error) {\n      alert(\"Retrieve File Did Not Work\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-ctr\",\n      children: cid && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://\".concat(cid, \".ipfs.dweb.link\"),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://\".concat(cid, \".ipfs.dweb.link\"),\n          height: \"250px\",\n          alt: \"IPFS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction\",\n      children: transaction && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://mumbai.polygonscan.com/tx/\".concat(transaction),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Transaction Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Accordion, {\n              id: \"accordionPanelsStayOpenExample\",\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                    as: Button,\n                    variant: \"link\",\n                    eventKey: \"0\",\n                    children: \"Accordion Item #1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n                  eventKey: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"This is the first item's accordion body.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 23\n                    }, _this), \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \".accordion-body\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 442\n                    }, _this), \", though the transition does limit overflow.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                    as: Button,\n                    variant: \"link\",\n                    eventKey: \"1\",\n                    children: \"Accordion Item #2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n                  eventKey: \"1\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"This is the second item's accordion body.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 23\n                    }, _this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \".accordion-body\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 444\n                    }, _this), \", though the transition does limit overflow.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                    as: Button,\n                    variant: \"link\",\n                    eventKey: \"2\",\n                    children: \"Accordion Item #3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n                  eventKey: \"2\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"This is the third item's accordion body.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 23\n                    }, _this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \".accordion-body\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 443\n                    }, _this), \", though the transition does limit overflow.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"choose\",\n          onChange: retrieveFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          style: {\n            backgroundColor: '#2ECC71',\n            color: \"white\"\n          },\n          type: \"submit\",\n          children: \"NFT Minter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n_s(FileUpload, \"qdIAUDr5nRnimDm30yaS+yMOgRk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Accordion","Card","Button","Container","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","_s","_ref","_useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","cid","setCid","_useState5","_useState6","transaction","setTransaction","handleSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","response","data","wrap","_callee$","_context","prev","next","preventDefault","FormData","append","fetch","method","body","sent","json","transactionHash","console","log","t0","alert","stop","apply","arguments","retrieveFile","target","files","error","children","className","href","concat","src","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","_this","rel","fluid","id","Header","Toggle","as","variant","eventKey","Collapse","Body","onSubmit","type","onChange","style","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/__F__/Projects/SIH2k23/SHAURYA/shaurya/src/variables/FileUpload.js"],"sourcesContent":["// import {useState} from \"react\";\n// // import '../assets/css/FileUpload.css';\n// // import MetaMaskButton from \"./MetaMaskButton\";\n// // reactstrap components\n// import {\n//     Container,\n//     Row,\n//     UncontrolledTooltip,\n//   } from \"reactstrap\";\n// import { Accordion, Card, Button } from 'react-bootstrap';\n\n// const FileUpload=()=>{\n// const [file,setFile]=useState(null);\n// const [cid,setCid]=useState(\"\");\n// const [transaction,setTransaction]=useState(\"\");\n//     const handleSubmit =async(event)=>{\n//         event.preventDefault();\n//          try{\n//              if(file){\n//                  const formData = new FormData();\n//                  formData.append(\"file\",file);\n//                  const response = await fetch('http://localhost:5000/upload',{\n//                      method:'POST',\n//                      body:formData\n//                  }).then(response=>response.json())\n//                  .then(data=>{ \n//                     setCid(data.cid);\n//                     setTransaction(data.transactionHash)\n//                    console.log(data.cid)\n//                    console.log(data.transactionHash)\n//                  })\n//                  .catch(error=>{\n//                      console.error(error);\n//                  })\n//              }\n//          }catch(error){\n//             alert(error);\n//          }\n//     }\n//     const retreieveFile=(event)=>{\n//         try{\n//             const data = event.target.files[0];\n//             setFile(data);\n//             event.preventDefault();\n//         }catch(error){\n//             alert(\"Retrieve File Does Not Worked\");\n//         }\n//     }\n    \n// return<>\n\n//     <div className=\"img-ctr\">\n//         {cid && <a href={`https://${cid}.ipfs.dweb.link`}><img src={`https://${cid}.ipfs.dweb.link`} height={\"250px\"} /></a>}\n//         </div>\n//         <div className=\"transaction\">\n//         {transaction && <a href={`https://mumbai.polygonscan.com/tx/${transaction}`} target=\"_blank\">Transaction Detials</a>}\n//     </div>\n//     <div className=\"form\">\n\n//         <Container className=\"mt--7\" fluid>\n//             {/* Table */}\n//             <Row>\n//                 <div className=\"col\">\n//                     <Accordion id=\"accordionPanelsStayOpenExample\">\n//                         <Card>\n//                             <Card.Header>\n//                             <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n//                                 Accordion Item #1\n//                             </Accordion.Toggle>\n//                             </Card.Header>\n//                             <Accordion.Collapse eventKey=\"0\">\n//                             <Card.Body>\n//                                 <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n//                             </Card.Body>\n//                             </Accordion.Collapse>\n//                         </Card>\n//                         <Card>\n//                             <Card.Header>\n//                             <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n//                                 Accordion Item #2\n//                             </Accordion.Toggle>\n//                             </Card.Header>\n//                             <Accordion.Collapse eventKey=\"1\">\n//                             <Card.Body>\n//                                 <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n//                             </Card.Body>\n//                             </Accordion.Collapse>\n//                         </Card>\n//                         <Card>\n//                             <Card.Header>\n//                             <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n//                                 Accordion Item #3\n//                             </Accordion.Toggle>\n//                             </Card.Header>\n//                             <Accordion.Collapse eventKey=\"2\">\n//                             <Card.Body>\n//                                 <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n//                             </Card.Body>\n//                             </Accordion.Collapse>\n//                         </Card>\n//                     </Accordion>\n//                 </div>\n//             </Row>\n//         </Container>\n\n//         <form onSubmit={handleSubmit}>\n            \n//             <input type=\"file\" className=\"choose\" onChange={retreieveFile}/>\n//             <button className=\"btn\" style={{backgroundColor:'#2ECC71',color:\"white\"}}>NFt Minter</button>\n             \n//         </form>\n//         {/* <MetaMaskButton /> */}\n//     </div>\n// </>\n// }\n// export default FileUpload;\n\n\n\nimport React, { useState } from \"react\";\nimport { Accordion, Card, Button, Container, Row } from \"react-bootstrap\";\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [cid, setCid] = useState(\"\");\n  const [transaction, setTransaction] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (file) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const response = await fetch(\"http://localhost:5000/upload\", {\n          method: \"POST\",\n          body: formData,\n        });\n        const data = await response.json();\n        setCid(data.cid);\n        setTransaction(data.transactionHash);\n        console.log(data.cid);\n        console.log(data.transactionHash);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const retrieveFile = (event) => {\n    try {\n      const data = event.target.files[0];\n      setFile(data);\n    } catch (error) {\n      alert(\"Retrieve File Did Not Work\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"img-ctr\">\n        {cid && (\n          <a href={`https://${cid}.ipfs.dweb.link`}>\n            <img src={`https://${cid}.ipfs.dweb.link`} height={\"250px\"} alt=\"IPFS\" />\n          </a>\n        )}\n      </div>\n      <div className=\"transaction\">\n        {transaction && (\n          <a href={`https://mumbai.polygonscan.com/tx/${transaction}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            Transaction Details\n          </a>\n        )}\n      </div>\n      <div className=\"form\">\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Accordion id=\"accordionPanelsStayOpenExample\">\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                      Accordion Item #1\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                      <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                      Accordion Item #2\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                      <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                      Accordion Item #3\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"2\">\n                    <Card.Body>\n                      <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n            </div>\n          </Row>\n        </Container>\n\n        <form onSubmit={handleSubmit}>\n          <input type=\"file\" className=\"choose\" onChange={retrieveFile} />\n          <button className=\"btn\" style={{ backgroundColor: '#2ECC71', color: \"white\" }} type=\"submit\">NFT Minter</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}